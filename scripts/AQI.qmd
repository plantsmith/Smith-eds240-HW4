---
title: "AQI"
format: html
editor: visual
---

```{r}
#| message: false
#| warning: false

#libraries: 
library(tidyverse)   # dplyr, purrr, etc.
library(janitor)     # for clean_names()
library(lubridate)   # for mdy(), etc
library(here)        # for here()
library(doBy)        # for summaryBy()
library(scales)
library(showtext) # allows us to import google fonts 
library(glue)
library(ggtext)
library(sf)
library(here)

#......................import Google fonts.......................
# `name` is the name of the font as it appears in Google Fonts
# `family` is the user-specified id that you'll use to apply a font in your ggpplot
font_add_google(name = "Montserrat", family = "mont")
font_add_google(name = "Open Sans", family = "open_sans")



#now we need to 'turn show text on'
#......enable {showtext} rendering for all newly opened GDs......
showtext_auto()

```

# AQI

## Median AQI

```{r}
#| message: false
#| warning: false

# data ranges from 2000 - 2024
years <- 2000:2024

# -------- S E T  U P  L O O P  --------
median_aqi_list <- map(years, ~ {
  
      # build the file path
  aqi_file_path <- here("data/aqi_daily", paste0("aqidaily_", .x, ".csv"))
  
# -------- R E A D  I N  D A T A --------
  read_csv(aqi_file_path) %>%
    clean_names() %>%
    
# -------- T I D Y--------
      #transform date from a character to a date
    mutate(date = mdy(date)) %>%
    
      #extract year
    mutate(year = year(date)) %>% 

      #calculate median AQI
    group_by(year) %>%
    summarize(
      median_aqi = median(overall_aqi_value, na.rm = TRUE),
      .groups = "drop")
    
})

# combine into one data frame
median_aqi_df <- bind_rows(median_aqi_list)

```

### Viz. 1:

```{r}
#| message: false
#| warning: false

ggplot(median_aqi_df, aes(x = year, y = median_aqi)) +
 geom_line() + 
  geom_point() +
  labs(x = " ", y = "Median AQI") +
  
    scale_y_continuous(
    limits = c(60, 105),
    breaks = seq(60, 100, by = 10)
 ) +
  
    scale_x_continuous(
    limits = c(2000, 2024), # Set axis range
    breaks = seq(2000, 2024, by = 2), 
  ) +
  
  theme_minimal() +
  #remove gridlines
  theme(
    # panel.grid.major = element_blank(),
    panel.grid.minor = element_blank()
    )
```

### Viz. 2:

```{r}
#| message: false
#| warning: false


ggplot(median_aqi_df, aes(x = year, y = median_aqi)) +
  
  geom_line() + 
  geom_point() +
  
  scale_y_continuous(
    limits = c(1, 110),
    breaks = seq(0, 100, by = 10)
 ) +
  
  scale_x_continuous(
    limits = c(2000, 2024), # Set axis range
    breaks = seq(2000, 2024, by = 2),  
  ) +

  theme_minimal() +
  theme(
    panel.grid.minor = element_blank(),
)
```

### Viz. 3 \<3

```{r}
#subtitle: 
subtitle <- glue::glue("
    Tracking median Air Quality Index (AQI) over time:<br>
    <span style='color:#88B589;'>**Good**</span>, 
    <span style='color:#F3D03E;'>**Moderate**</span>, 
    <span style='color:#E67E52;'>**Unhealthy for Sensitive Groups**</span>"
)

```

```{r}
aqi_plot <- ggplot(median_aqi_df, aes(x = year, y = median_aqi)) +
  
  # ADD COLOR TO AXIS LINES
  geom_segment(aes(x = 1999.65, xend = 1999.65, y = 50, yend = 60), color = "#88B589", linewidth = 2) +
  geom_segment(aes(x = 1999.65, xend = 1999.65, y = 60, yend = 100), color = "#F3D03E", linewidth = 2) +
  geom_segment(aes(x = 1999.65, xend = 1999.65, y = 100, yend = 105), color = "#E67E52", linewidth = 2) +
  
  geom_line() + 
  geom_point() +
  
# ADD ANNOTATIONS  
  # Low Emission Standards 2004
  annotate(
    geom = "text",
    x = 2000.6,
    y = 80,
    label = "LEV II Vehicle\nStandards Take Effect",
    size = 3,
    color = "black",
    hjust = "inward"
  ) +
  # add arrow
  annotate(
    geom = "segment",
    x = 2004, xend = 2004,
    y = 89, yend = 81,
  ) +  
  
  # Advanced Clean Cars Program & Cap-and-Trade Begin 2012
  annotate(
    geom = "text",
    x = 2015.65,
    y = 70.75,
    label = "Advanced Clean\nCars Program Begins",
    size = 3,
    color = "black",
    hjust = 1  # Left-aligned text
  ) +
  # add arrow
annotate(
    geom = "segment",  
    x = 2012, xend = 2012, 
    y = 73, yend = 83,  
  ) +
  # Bobcat Fire 2020
  annotate(
    geom = "text",
    x = 2022.21,
    y = 93,
    label = "Bobcat Fire",
    size = 3,
    color = "black",
    hjust = "inward"
  ) +
  # add arrow
  annotate(
    geom = "segment",
    x = 2020, xend = 2020,
    y = 91.5, yend = 86.65,
  ) +
  

# BACK TO PLOTTING  
  scale_y_continuous(
    limits = c(50, 105),
    breaks = seq(50, 100, by = 10)
  ) +
  
  scale_x_continuous(
    limits = c(1999, 2024),
    breaks = c(seq(2000, 2020, by = 5), 2024),
  ) +
  
# TITLES, ETC.  
labs(
  title = "Los Angeles Air Quality Trends (2000â€“2024)",
  subtitle = subtitle,
  caption = "Data source: EPA (2025)"

    ) +
  
  theme_minimal() +
  
# CUSTOMIZE THEME
  theme(
    plot.title.position = "plot", # shift title to the left
    plot.title = element_text(family = "mont",
                            face = "bold",
                            size = 18,
                            color = "black"),  # Fixed here by closing the parenthesis
    plot.subtitle = ggtext::element_textbox(family = "open_sans",
                             size = 11.5,
                             color = "black",
                             margin = margin(t = 2, r = 0, b = 6, l = 0)),  # move in clockwise to top, right, bottom, left
  plot.caption = ggtext::element_textbox(family = "open_sans",
                             face = "italic",
                             color = "black",
                             margin = margin(t = 15, r = 0, b = 0, l = 0)),
  
    # panel.grid.major.y = element_line(color = "gray90"),
    panel.grid.major.y = element_blank(),
    panel.grid.minor.y = element_blank(),
    panel.grid.minor.x = element_blank(),
    panel.grid.major.x = element_blank(),
    
    axis.line.y = element_blank(),
    axis.text.y = element_blank(), # remove y axis text
    axis.title = element_blank(),   # Remove axis titles
    
    plot.margin = margin(t = 10, r = 10, b = 10, l = 10)
  
  )

aqi_plot
```

FYI Lev II = California **tightened emissions limits** on passenger vehicles, requiring major reductions in **smog-forming pollutants (NOx and PM2.5)**.

### Viz. 4:

```{r}
#| eval: true
#| echo: true
#| message: false
#| warning: false


ggplot(median_aqi_df, aes(x = year, y = median_aqi)) +
  
#------BACKGROUND------  
  # Add AQI threshold background colors
  annotate("rect", xmin = 2000, xmax = 2024, ymin = 40, ymax = 50, 
           fill = "#88B589", alpha = 0.3) +
  annotate("rect", xmin = 2000, xmax = 2024, ymin = 50, ymax = 100, 
           fill = "#F3D03E", alpha = 0.2) +
  annotate("rect", xmin = 2000, xmax = 2024, ymin = 100, ymax = 110, 
           fill = "#E67E52", alpha = 0.2) +
  
  
  # Add category labels
  # GOOD
  annotate("text", 
           x = 2023, 
           y = 45, 
           label = "Good", 
           hjust = 1,
           fontface = "plain",
           family = "Arial",
           size = 3.5) +
  # MODERATE
  annotate("text", 
           x = 2023, 
           y = 62, 
           label = "Moderate",
           hjust = 1,
           fontface = "plain",
           family = "Arial",
           size = 3.5) +
  # UNHEALTHY
  annotate("text", 
           x = 2023, 
           y = 105, 
           label = "Unhealthy for\nSensitive Groups", 
           hjust = 1,
           fontface = "plain",
           family = "Arial",
           size = 3.5) +
  
#------FOREGROUND------    
    
  geom_line() + 
  geom_point() +
  
  scale_y_continuous(
    limits = c(40, 110),
    breaks = seq(40, 105, by = 10)
  ) +
  
  scale_x_continuous(
    limits = c(2000, 2024),
    breaks = seq(2000, 2024, by = 5),
    minor_breaks = seq(2000, 2024, by = 1)
  ) +
  
  coord_fixed(ratio = 1/4) +
  
  theme_minimal() +
  
  theme(
    
    #AXES
    axis.title = element_blank(),   # Remove axis titles
    axis.text.y = element_blank(),
    axis.text.x = element_text(margin = margin(r = 1)),
    
    #GRIDLINES
    panel.grid.minor.y = element_blank(),  
    # Keep x-axis minor gridlines but make them very light
    # panel.grid.minor.x = element_line(color = "grey90"), 
    panel.grid.minor.x = element_blank(),
    panel.grid.major.y = element_blank(),
    panel.grid.minor = element_blank()
    
    # AXIS TICKS
    # axis.ticks.x = element_line(),  # Show axis ticks
    # axis.ticks.length = unit(2, "pt"), # Adjust tick length if needed
    
  )
```

### Viz. 5

```{r}
#| message: false
#| warning: false

ggplot(median_aqi_df, aes(x = year, y = median_aqi)) +
  
#------BACKGROUND------  
  # Add AQI threshold background colors
  annotate("rect", xmin = 2000, xmax = 2024, ymin = 40, ymax = 50, 
           fill = "#90EE90", alpha = 0.25) +
  annotate("rect", xmin = 2000, xmax = 2024, ymin = 50, ymax = 100, 
           fill = "#ffff00", alpha = 0.15) +
  annotate("rect", xmin = 2000, xmax = 2024, ymin = 100, ymax = 110, 
           fill = "#ff7e00", alpha = 0.15) +
  
  # Add category labels with improved typography
  annotate("text", 
           x = 2023, 
           y = 45, 
           label = "Good", 
           hjust = 1,
           family = "Arial",
           size = 3,
           color = "grey25") +
  annotate("text", 
           x = 2023, 
           y = 62, 
           label = "Moderate",
           hjust = 1,
           family = "Arial",
           size = 3,
           color = "grey25") +
  annotate("text", 
           x = 2023, 
           y = 105, 
           label = "Unhealthy for\nSensitive Groups", 
           hjust = 1,
           family = "Arial",
           size = 3,
           color = "grey25") +
  
#------FOREGROUND------    
  geom_line(linewidth = 0.7) + 
  geom_point(size = 2) +
  
  scale_y_continuous(
    limits = c(40, 110),
    breaks = seq(40, 105, by = 10)
  ) +
  
  scale_x_continuous(
    limits = c(2000, 2024),
    breaks = seq(2000, 2024, by = 5),
    minor_breaks = seq(2000, 2024, by = 1)
  ) +
  
  coord_fixed(ratio = 1/4) +
  
  theme_minimal() +
  theme(
    #TEXT
    text = element_text(family = "Arial", color = "grey25"),
    
    #AXES
    axis.title = element_blank(),
    axis.text.y = element_blank(),
    axis.text = element_text(size = 8),
    
    #GRIDLINES
    panel.grid.minor = element_blank(),
    panel.grid.major.y = element_blank(),
    panel.grid.major.x = element_blank(),
    # panel.grid.major.x = element_line(color = "grey90"),
    
    #PLOT BORDER
    axis.line.x = element_line(color = "grey90"),
    axis.line.y = element_line(color = "grey90")
)
```

```{r}
aqi_plot <- ggplot(median_aqi_df, aes(x = year, y = median_aqi)) +
  labs(x = " ", y = "Median AQI") +
  
  # ADD COLOR TO AXIS LINES
  geom_segment(aes(x = 2000, xend = 2000, y = 50, yend = 60), color = "#88B589", linewidth = 2) +
  geom_segment(aes(x = 2000, xend = 2000, y = 60, yend = 100), color = "#F3D03E", linewidth = 2) +
  geom_segment(aes(x = 2000, xend = 2000, y = 100, yend = 105), color = "#E67E52", linewidth = 2) +
  
  # PLOT LINE AND POINTS
  geom_line() + 
  geom_point() +

  # HIGHLIGHTED POINTS (2004, 2012, 2020)
  geom_point(data = median_aqi_df %>% filter(year %in% c(2004, 2012, 2020)), 
             aes(x = year, y = median_aqi), 
             color = "darkgray", size = 3.5, stroke = 1) +  
  
# ADD ANNOTATIONS  
  ## Bobcat Fire 2020
  annotate(
    geom = "text",
    x = 2024,
    y = 94.5,
    label = "2020: Bobcat Fire",
    size = 3,
    color = "black",
    hjust = "right"
  ) +
  annotate(
    geom = "curve",
    x = 2023, xend = 2020,
    y = 91, yend = 87,
    curvature = 0.15,
    arrow = arrow(length = unit(0.3, "cm"))
  ) +

  ## LEV II Vehicle Standards 2004
  annotate(
    geom = "text",
    x = 2004.5, 
    y = 90,
    label = "2004: LEV II Standards\nStricter vehicle emission rules",
    size = 3,
    color = "black",
    hjust = "left"
  ) +
  annotate(
    geom = "curve",
    x = 2002, xend = 2004,
    y = 85, yend = 88.85,
    curvature = -0.15,
    arrow = arrow(length = unit(0.3, "cm"))
  ) +  

  ## Advanced Clean Cars Program (2012)
  annotate(
    geom = "text",
    x = 2012.5, 
    y = 72,
    label = "2012: Advanced Clean Cars\n& Cap-and-Trade Begin",
    size = 3,
    color = "black",
    hjust = "left"
  ) +
  annotate(
    geom = "curve",  
    x = 2011, xend = 2012, 
    y = 75, yend = 81,  
    curvature = -0.12, 
    arrow = arrow(length = unit(0.3, "cm")) 
  ) +

# BACK TO PLOTTING  
  scale_y_continuous(
    limits = c(50, 105),
    breaks = seq(50, 100, by = 10)
  ) +
  
  scale_x_continuous(
    limits = c(2000, 2024),
    breaks = seq(2000, 2024, by = 5)
  ) +
  
# TITLES, ETC.  
labs(
  title = "Los Angeles Air Quality Trends (2000â€“2024)",
  subtitle = "Tracking median Air Quality Index (AQI) over time with key policy milestones",
  caption = "Data source: EPA (2025)"
) +
  
  theme_minimal() +
  
# CUSTOMIZE THEME
  theme(
    plot.title.position = "plot",
    plot.title = element_text(family = "mont",
                              face = "bold",
                              size = 18,
                              color = "black"),
    plot.subtitle = ggtext::element_textbox(family = "open_sans",
                               size = 11.5,
                               color = "black",
                               margin = margin(t = 2, r = 0, b = 6, l = 0)),  
    plot.caption = ggtext::element_textbox(family = "open_sans",
                               face = "italic",
                               color = "black",
                               margin = margin(t = 15, r = 0, b = 0, l = 0)),
    panel.grid.major.y = element_line(color = "gray90"),
    panel.grid.minor.y = element_blank(),
    panel.grid.minor.x = element_blank(),
    panel.grid.major.x = element_blank(),
    axis.line.y = element_blank(),
    axis.title = element_blank(),
    plot.margin = margin(t = 10, r = 10, b = 10, l = 10)
  )

aqi_plot



```
